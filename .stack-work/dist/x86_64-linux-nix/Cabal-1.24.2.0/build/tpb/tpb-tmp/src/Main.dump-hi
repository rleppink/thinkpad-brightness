
==================== FINAL INTERFACE ====================
2017-11-19 10:39:38.779441082 UTC

interface main@main:Main 8002
  interface hash: 2918bf915d982c3caf1c155bc35e2200
  ABI hash: 7616c38eae2ed2c148c8ec14b47a876c
  export-list hash: e82d5253e6df6fc62093539dcd4b15e2
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ae2b19e841a7cdfeda0817350789a466
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.backlightFilePath
  Main.binaryStep
  Main.brightnessFilePath
  Main.calcGradualBrightness
  Main.changeBrightness
  Main.closestGradualStep
  Main.flatStep
  Main.gradualStep
  Main.main
  Main.maxBrightnessFilePath
  Main.needsArgument
  Main.parse
  Main.printBrightness
  Main.sanitizeBrightness
  Main.toggleStep
  Main.usage
  Main.version
  Main.writeBrightness
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Float 33e2b9ffe427edd6a5c2fd6a3b26703c
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Environment 08cb808e8e6a7821e6f8cfa76a977431
import  -/  base-4.9.1.0:System.Exit 068ba078eb20417d7af66db8b8ab4db1
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
880181e5f4fd1fd76318366bcc2af750
  $s^1 :: GHC.Types.Double
  {- Strictness: x -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
37083c393df7f30ace67d0a5db6a6eb6
  $wbinaryStep :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (ww1 :: GHC.Prim.Int#) ->
                 case GHC.Prim.logDouble#
                        (GHC.Prim.int2Double# (GHC.Prim.+# ww1 ww)) of wild2 { DEFAULT ->
                 case GHC.Prim.logDouble# 2.0## of wild3 { DEFAULT ->
                 case GHC.Prim./## wild2 wild3 of wild4 { DEFAULT ->
                 case {__pkg_ccall base-4.9.1.0 rintDouble GHC.Prim.Double#
                                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 GHC.Prim.Double# #)}
                        wild4
                        GHC.Prim.realWorld# of wild { (#,#) ds2 ds3 ->
                 let {
                   x :: GHC.Prim.Int# = GHC.Prim.double2Int# ds3
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# x 0#) of wild1 {
                   GHC.Types.False
                   -> case x of wild5 { DEFAULT -> GHC.Real.$wf1 2# wild5 0# -> 1# }
                   GHC.Types.True -> 0# } } } } }) -}
41fc98c12ec13e30e7b535e9530c97ce
  $wcalcGradualBrightness :: GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case ww of ds {
                   DEFAULT
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# ds 0#) of wild {
                        GHC.Types.False
                        -> case Main.$wf 1.6357## ds of ww1 { DEFAULT ->
                           case {__pkg_ccall base-4.9.1.0 rintDouble GHC.Prim.Double#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Prim.Double# #)}
                                  (GHC.Prim.*## 1.8688## ww1)
                                  GHC.Prim.realWorld# of wild1 { (#,#) ds2 ds3 ->
                           GHC.Prim.double2Int# ds3 } }
                        GHC.Types.True -> case Main.$s^1 ret_ty GHC.Prim.Int# of {} }
                   0# -> 0#
                   1# -> 1# }) -}
c524fb82aa633aedd3f9e28837c4db3a
  $wf :: GHC.Prim.Double# -> GHC.Prim.Int# -> GHC.Prim.Double#
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>, Inline: [0] -}
89a5c0abc563c433309bc8cc9eecdb93
  $wgradualStep :: GHC.Types.Int -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Int) (ww :: GHC.Prim.Int#) ->
                 case ww of ds {
                   DEFAULT
                   -> case GHC.Prim.logDouble#
                             (GHC.Prim./##
                                (GHC.Prim.int2Double# ds)
                                1.8688##) of wild2 { DEFAULT ->
                      case GHC.Prim.logDouble# 1.6357## of wild3 { DEFAULT ->
                      case GHC.Prim./## wild2 wild3 of wild4 { DEFAULT ->
                      case {__pkg_ccall base-4.9.1.0 rintDouble GHC.Prim.Double#
                                                                -> GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                -> (# GHC.Prim.State#
                                                                        GHC.Prim.RealWorld,
                                                                      GHC.Prim.Double# #)}
                             wild4
                             GHC.Prim.realWorld# of wild { (#,#) ds2 ds3 ->
                      case w of wild1 { GHC.Types.I# y ->
                      let {
                        x :: GHC.Prim.Int# = GHC.Prim.+# (GHC.Prim.double2Int# ds3) y
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x 0#) of wild7 {
                        GHC.Types.False -> Main.$wcalcGradualBrightness x
                        GHC.Types.True -> 0# } } } } } }
                   0#
                   -> case w of wild { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x 0#) of wild1 {
                        GHC.Types.False -> Main.$wcalcGradualBrightness x
                        GHC.Types.True -> 0# } }
                   1#
                   -> case w of wild1 { GHC.Types.I# y ->
                      let {
                        x :: GHC.Prim.Int# = GHC.Prim.+# 1# y
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x 0#) of wild {
                        GHC.Types.False -> Main.$wcalcGradualBrightness x
                        GHC.Types.True -> 0# } }
                   2#
                   -> case w of wild1 { GHC.Types.I# y ->
                      let {
                        x :: GHC.Prim.Int# = GHC.Prim.+# 1# y
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x 0#) of wild {
                        GHC.Types.False -> Main.$wcalcGradualBrightness x
                        GHC.Types.True -> 0# } } }) -}
21ad396a306bb8e5a9a1ffc5422c6f20
  $wsanitizeBrightness ::
    GHC.Types.Int -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Int) (ww :: GHC.Prim.Int#) ->
                 case ww of wild {
                   DEFAULT
                   -> case w of wild1 { GHC.Types.I# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# wild y) of wild2 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.># wild 0#) of wild3 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.># wild y) of wild4 {
                                  GHC.Types.False -> 0# GHC.Types.True -> y }
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# wild y) of wild4 {
                                  GHC.Types.False
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.># wild y) of wild5 {
                                       GHC.Types.False -> 0# GHC.Types.True -> y }
                                  GHC.Types.True -> wild } }
                        GHC.Types.True -> wild } }
                   0# -> 0# }) -}
3f781149ce92bf636c4311138c7bb8e5
  backlightFilePath :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (filename :: GHC.Base.String) ->
                 Main.backlightFilePath1
                   @ [GHC.Types.Char]
                   (GHC.Types.: @ GHC.Types.Char)
                   filename) -}
9fb245afbebc2159c9650b480ece4d3b
  backlightFilePath1 :: (GHC.Types.Char -> b -> b) -> b -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(C1(U))><L,U>,
     Unfolding: (\ @ b
                   (c :: GHC.Types.Char -> b -> b)[OneShot]
                   (n :: b)[OneShot] ->
                 GHC.CString.unpackFoldrCString#
                   @ b
                   "/sys/class/backlight/intel_backlight/"#
                   c
                   n) -}
ac1f6307ab44d5cb06409f2acd6f2417
  binaryStep :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 case Main.$wbinaryStep ww1 ww3 of ww4 { DEFAULT ->
                 GHC.Types.I# ww4 } } }) -}
06344d35ca39f5a052fef302862fa9d7
  brightnessFilePath :: GHC.Base.String
  {- Unfolding: (Main.backlightFilePath1
                   @ [GHC.Types.Char]
                   (GHC.Types.: @ GHC.Types.Char)
                   Main.brightnessFilePath1) -}
a89aec506a71e52ac581914ed7999901
  brightnessFilePath1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "brightness"#) -}
7c679a6d4bee36c9c4c8de6a7e5a86dd
  calcGradualBrightness :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, Strictness: <S(S),1*U(U)>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case Main.$wcalcGradualBrightness ww1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 } }) -}
ee6163c82a17d41b1c8173c7697f6ab2
  changeBrightness ::
    (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*C1(U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.changeBrightness1
                  `cast`
                (<GHC.Types.Int -> GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
85c7f62205a1863ecead82b8ced166a7
  changeBrightness1 ::
    (GHC.Types.Int -> GHC.Types.Int)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*C1(U(U))><S,U>,
     Unfolding: (\ (f :: GHC.Types.Int -> GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.maxBrightnessFilePath
                        GHC.IO.IOMode.ReadMode
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.brightnessFilePath
                        GHC.IO.IOMode.ReadMode
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv5
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.List.$wlenAcc @ GHC.Types.Char ipv7 0# of ww2 { DEFAULT ->
                 System.IO.writeFile1
                   Main.brightnessFilePath
                   (case f (case Text.Read.readEither6
                                   @ GHC.Types.Int
                                   (Text.ParserCombinators.ReadP.run
                                      @ GHC.Types.Int
                                      Main.changeBrightness6
                                      ipv7) of wild {
                              [] -> Main.changeBrightness5
                              : x ds
                              -> case ds of wild1 {
                                   [] -> x
                                   : ipv8 ipv9
                                   -> Main.changeBrightness4 } }) of ww { GHC.Types.I# ww1 ->
                    case Main.$wsanitizeBrightness
                           (case Text.Read.readEither6
                                   @ GHC.Types.Int
                                   (Text.ParserCombinators.ReadP.run
                                      @ GHC.Types.Int
                                      Main.changeBrightness6
                                      ipv3) of wild {
                              [] -> Main.changeBrightness3
                              : x ds
                              -> case ds of wild1 {
                                   [] -> x : ipv8 ipv9 -> Main.changeBrightness2 } })
                           ww1 of ww3 { DEFAULT ->
                    case GHC.Show.$wshowSignedInt
                           0#
                           ww3
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    GHC.Types.: @ GHC.Types.Char ww5 ww6 } } })
                   ipv6 } } } } }) -}
b0b55c133c6cb288dfa11c20ec3854bf
  changeBrightness2 :: GHC.Types.Int
  {- Strictness: x -}
f49f8f068876105aa78ea42ffff4fd78
  changeBrightness3 :: GHC.Types.Int
  {- Strictness: x -}
4e28d23b86a21731e0cb0849391c7178
  changeBrightness4 :: GHC.Types.Int
  {- Strictness: x -}
8799409922b54e4170ffba4b0e9deec7
  changeBrightness5 :: GHC.Types.Int
  {- Strictness: x -}
ee3a1686bbfba58e9fde2e80d8bc42dd
  changeBrightness6 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: (GHC.Read.$fReadInt3
                   GHC.Read.$fReadInt_$sconvertInt
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Int
                   (Text.Read.readEither5 @ GHC.Types.Int)) -}
fcc22cef09873a84e56e8eade989bdf7
  closestGradualStep :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case ww1 of ds {
                   DEFAULT
                   -> case GHC.Prim.logDouble#
                             (GHC.Prim./##
                                (GHC.Prim.int2Double# ds)
                                1.8688##) of wild2 { DEFAULT ->
                      case GHC.Prim.logDouble# 1.6357## of wild3 { DEFAULT ->
                      case GHC.Prim./## wild2 wild3 of wild4 { DEFAULT ->
                      case {__pkg_ccall base-4.9.1.0 rintDouble GHC.Prim.Double#
                                                                -> GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                -> (# GHC.Prim.State#
                                                                        GHC.Prim.RealWorld,
                                                                      GHC.Prim.Double# #)}
                             wild4
                             GHC.Prim.realWorld# of wild { (#,#) ds2 ds3 ->
                      GHC.Types.I# (GHC.Prim.double2Int# ds3) } } } }
                   0# -> GHC.Types.I# 0#
                   1# -> GHC.Types.I# 1#
                   2# -> GHC.Types.I# 1# } }) -}
c34c84e99ad3bb860043fcd4405702ac
  flatStep :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, True)
                (\ (delta :: GHC.Types.Int) (current :: GHC.Types.Int) ->
                 GHC.Num.$fNumInt_$c+ current delta) -}
3dcd674cbd47bf1e42605a534fbc1d53
  gradualStep :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, Strictness: <L,1*U(U)><S(S),1*U(1*U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case Main.$wgradualStep w ww1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 } }) -}
2e0f28a10612d28c660b6504cbbd40c7
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
5e469c3eb263ff51fef3ddba4e660772
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case Main.main2 ipv1 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   ipv3
                   GHC.Types.True
                   ipv2 } }) -}
5f8594af8f9ae0bb2a5342fa70124318
  main2 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
f91404f893c7c2cf8ef725471ec9b969
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
78acc45569e227f5c81ac60516deebdd
  maxBrightnessFilePath :: GHC.Base.String
  {- Unfolding: (Main.backlightFilePath1
                   @ [GHC.Types.Char]
                   (GHC.Types.: @ GHC.Types.Char)
                   Main.maxBrightnessFilePath1) -}
059d3c3b8f7860ac427fcf3ed39f4fa2
  maxBrightnessFilePath1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "max_brightness"#) -}
bd2fe2d472b70968d01eacdd035525ff
  needsArgument :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.needsArgument1
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
1109218b6337226ac9bca36db82cd9e6
  needsArgument1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: (\ (x :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.Base.++ @ GHC.Types.Char x Main.needsArgument2)
                   GHC.Types.True
                   eta) -}
46ed76ef92eea7a4a865e2f7ee6bfe6a
  needsArgument2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " needs an argument"#) -}
78fe60e8fe2360adf425f4eafc776898
  parse :: [GHC.Base.String] -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main2
                  `cast`
                (<[GHC.Base.String]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
d97543455fb22c501147c5aae98bd846
  printBrightness :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.printBrightness1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
1620baf8a9b42deb2ddffebd48202758
  printBrightness1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.brightnessFilePath
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   ipv3
                   GHC.Types.True
                   ipv2 } }) -}
80330e4ff6e1accf7521d3895e39534b
  sanitizeBrightness ::
    GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><S(S),1*U(U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case Main.$wsanitizeBrightness w ww1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 } }) -}
9c868c9448b1f2f7c5c2bbbedb28cf80
  toggleStep :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (current :: GHC.Types.Int) ->
                 case current of wild { GHC.Types.I# x ->
                 case x of wild1 {
                   DEFAULT -> Main.toggleStep2 0# -> Main.toggleStep1 } }) -}
cfa2249eb8128682657806294d70bbcb
  toggleStep1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3000#) -}
a470499e69dd50e3031227f037262dc3
  toggleStep2 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
607a637452d01e14cd9158b408b762a6
  usage :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.usage1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
001a2a30a66987a91e1c0da10f3d1fd6
  usage1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.usage2
                   GHC.Types.True
                   eta) -}
802f4e5116e5d65e9de67c43e59a56f0
  usage2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Usage: tpb [-idw] [--calculator] [amount]"#) -}
bf1b279053052e8a3024ba32752d7c5e
  version :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.version1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
90c5cc67bf3a34762a8aab217ae4be47
  version1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.version2
                   GHC.Types.True
                   eta) -}
dc114067530914638b460a92299eadf1
  version2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Thinkpad Brightness v0.2"#) -}
8db8f086e9be2869df57fdc1629ff9f6
  writeBrightness :: GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.writeBrightness1
                  `cast`
                (<GHC.Types.Int>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b98ff0ac9a4a7a7feda2f90226928ce8
  writeBrightness1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 System.IO.writeFile1
                   Main.brightnessFilePath
                   (GHC.Show.$fShowInt_$cshow x)
                   eta) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

